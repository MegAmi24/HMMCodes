Code "Enable Air Tricks in Cyber Space" in "! Incompatible - awaiting fixes for v1.40" by "WasifBoomz" does 
/*
Allows Sonic to use the Air Trick skill in Cyber Space.

Notes;
- This will only work for traversal objects, use the 'Enable Flinging from Terrain in Cyber Space' code to allow Sonic to fling off of terrain.
*/
//
    #include "BlackboardStatus" noemit

    #lib "Bitwise"
    #lib "Memory"

    static bool isCyber = false;
    static bool isInitialised = false;
//
{
    if (!isInitialised)
    {
        fixed (bool* pIsCyber = &isCyber)
        {
            /* 0x14BB55230 */
            long CallAddress1 = ScanSignature
            (
                "\x40\x53\x48\x83\xEC\x20\x48\x8B\x41\x38\x0F\xB6\xDA\x48\x8B\x88\x08\x01\x00\x00\x48\x85\xC9\x74\x1F\xBA\xFF\x9E\x82\x22",
                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
            );

            /* 0x1408F62C0 */
            long CallAddress2 = ScanSignature
            (
                "\x40\x53\x48\x83\xEC\x20\xBA\x1A\x00\x00\x00",
                "xxxxxxxxxxx"
            );
            
            /* Handling the Tumble State */
            WriteAsmHook
            (
                $@"
                    mov rbx, {(long)pIsCyber}
                    cmp byte ptr [rbx], 1
                    jz  cyber
                    
                original:
                    mov  rcx, rdi
                    mov  rbx, {(long)CallAddress1}
                    call rbx
                                    
                    mov  rcx, rdi
                    mov  rax, {(long)CallAddress2}
                    call rax
                    jmp  end

                cyber:
                    mov  al, 1
                end:
                ",
                
                /* 0x14B3E7548 */
                ScanSignature
                (
                    "\x48\x89\xF9\xE8\xCC\xCC\xCC\xCC\x48\x89\xF9\xE8\xCC\xCC\xCC\xCC\x84\xC0",
                    "xxxx????xxxx????xx"
                ),
                
                HookBehavior.Replace
            );
    
            /* 0x14B74C5F6 */
            long HandleAddress = ScanSignature
            (
                "\x80\x79\x3D\x00\x48\x89\xCB",
                "xxxxxxx"
            );
            
            WriteNop(HandleAddress, 0x1E);
            
            /* 0x1408F9C10 */
            long ChangeFlagAddress = Memory.ReadCall
            (
                /* 0x140866188 */
                ScanSignature
                (
                    "\xE8\xCC\xCC\xCC\xCC\xBA\x06\x00\x00\x00\x48\x8B\xCE\xE8\xCC\xCC\xCC\xCC\x84\xC0",
                    "x????xxxxxxxxx????xx"
                )
            );
            
            /* Handling Springs, Jump Boards, and Dash Rings */
            WriteAsmHook
            (
                $@"
                    mov rax, {(long)pIsCyber}
                    cmp byte ptr [rax], 1
                    jz  cyberJump

                originalCheck:
                    cmp  byte ptr [rcx+3Dh], 0
                    mov  rbx, rcx
                    jz   end
                
                cyberJump:
                    mov  rcx, [rcx+20h]
                    mov  r8b, 1
                    mov  edx, 28h
                    mov  rax, {(long)ChangeFlagAddress}
                    call rax
                    mov  byte ptr [rbx+3Dh], 0
                end:
                ",
                
                HandleAddress,
                
                HookBehavior.Replace
            );
        }

        isInitialised = true;
    }

    isCyber = IS_WORLD_FLAG(IsCyberSpace);
}


